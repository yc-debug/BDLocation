"""
@Project ：BDLocation 
@File    ：test1.py
@IDE     ：PyCharm 
@Author  ：姚聪
@Date    ：2023/12/10 15:29 
"""
import math
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import csv

# def distance(P, A, B):
#     x0, y0 = P
#     x1, y1 = A
#     x2, y2 = B
#     A = y2 - y1
#     B = x1 - x2
#     C = x2 * y1 - x1 * y2
#     d = abs(A * x0 + B * y0 + C) / (A ** 2 + B ** 2) ** 0.5
#     return d
#
#
# point = np.array([-100.11293459060334, -188.88982843899106])
# point1 = np.array([-100.3528226, -86.36454133])
# point2 = np.array([-100.3528226, -103.4428343])
# print(distance(point, point1, point2))
import pyproj


def get_data():
    temp = pd.read_csv('data/dataset4_200_restore.csv')
    return temp


data = get_data()
# new_time = [1700454484424.0,
#             1700454485464.0,
#             1700454486484.0,
#             1700454487503.0,
#             1700454488527.0,
#             1700454489545.0,
#             1700454490565.0,
#             1700454491582.0002,
#             1700454492607.0,
#             1700454493637.0,
#             1700454494644.0,
#             1700454495663.0,
#             1700454497684.0,
#             1700454499703.0,
#             1700454501724.0,
#             1700454503742.0002,
#             1700454504763.0,
#             1700454507785.0,
#             1700454510801.9998,
#             1700454511822.0002,
#             1700454512841.9998,
#             1700454513862.0002,
#             1700454514884.0,
#             1700454515902.0002,
#             1700454517923.0,
#             1700454518942.0002,
#             1700454519961.9998]
# new_time = [1700454717415.0,
#             1700454718453.0,
#             1700454719473.0,
#             1700454721492.0,
#             1700454723515.0,
#             1700454724533.0,
#             1700454725553.9998,
#             1700454727573.0,
#             1700454728601.0,
#             1700454729629.0,
#             1700454730633.9998,
#             1700454732659.0,
#             1700454734673.9998,
#             1700454736693.0,
#             1700454737713.0,
#             1700454738733.0,
#             1700454740755.0,
#             1700454742773.0,
#             1700454743796.0,
#             1700454745813.0,
#             1700454746833.0,
#             1700454747853.0,
#             1700454748875.0,
#             1700454749894.0002,
#             1700454750915.0,
#             1700454751933.0,
#             1700454752953.0]
# new_time = [1700455004419.0,
#             1700455006462.0002,
#             1700455007481.0,
#             1700455009500.0,
#             1700455011519.0,
#             1700455012541.0,
#             1700455014561.0,
#             1700455016580.0,
#             1700455018604.0,
#             1700455019641.9998,
#             1700455021641.9998,
#             1700455023670.0002,
#             1700455024679.0,
#             1700455025699.0,
#             1700455027719.0,
#             1700455029739.0,
#             1700455031763.0,
#             1700455032779.0,
#             1700455033800.0,
#             1700455034824.0,
#             1700455035840.0,
#             1700455036859.0,
#             1700455037880.0,
#             1700455038900.0,
#             1700455039919.0]
# new_time = [1700455129408.0,
#             1700455131470.0002,
#             1700455132495.0,
#             1700455133512.0,
#             1700455135528.0,
#             1700455136549.0,
#             1700455138568.0,
#             1700455140601.0,
#             1700455141608.0,
#             1700455142633.9998,
#             1700455144649.9998,
#             1700455145668.0,
#             1700455147693.0,
#             1700455149709.0,
#             1700455150729.0,
#             1700455151751.0,
#             1700455152769.0,
#             1700455154790.0002,
#             1700455156808.0,
#             1700455157828.0,
#             1700455158849.0,
#             1700455159872.0,
#             1700455160892.0,
#             1700455161909.0,
#             1700455162928.0,
#             1700455163950.0002,
#             1700455164968.0]
# new_time = [1700454407424.0,
#             1700454408504.0,
#             1700454410524.0,
#             1700454412544.0,
#             1700454413567.0,
#             1700454415584.0,
#             1700454417609.9998,
#             1700454419629.0,
#             1700454420654.0002,
#             1700454422664.0,
#             1700454424685.0,
#             1700454425704.0,
#             1700454427732.0,
#             1700454428744.0,
#             1700454430765.0,
#             1700454431785.0,
#             1700454432804.0,
#             1700454433824.0,
#             1700454434845.0,
#             1700454435864.0,
#             1700454436885.0,
#             1700454437907.0,
#             1700454439924.0,
#             1700454440944.0,
#             1700454441964.0]
# new_time = [1700453876396.0,
#             1700453878455.0,
#             1700453879475.0,
#             1700453881496.0,
#             1700453883515.0,
#             1700453885536.0,
#             1700453886555.0,
#             1700453888584.0,
#             1700453890600.0,
#             1700453892628.0,
#             1700453893636.0,
#             1700453895655.0,
#             1700453897675.0,
#             1700453899696.0,
#             1700453900716.0,
#             1700453901735.0,
#             1700453902757.0,
#             1700453903776.0,
#             1700453904801.0,
#             1700453905825.9998,
#             1700453906836.0,
#             1700453907856.0,
#             1700453908876.0,
#             1700453909897.9998,
#             1700453910916.0,
#             1700453911939.0]
# new_time = [1700455012561.0,
#             1700455013580.0,
#             1700455013604.0,
#             1700455013641.9998,
#             1700455013641.9998,
#             1700455014670.0002,
#             1700455017679.0,
#             1700455020699.0]
new_time = [1700454408524.0,
            1700454408544.0,
            1700454408567.0,
            1700454408584.0,
            1700454409609.9998,
            1700454409629.0,
            1700454409654.0002,
            1700454410664.0,
            1700454412685.0,
            1700454412704.0,
            1700454413732.0,
            1700454413744.0,
            1700454414765.0,
            1700454414785.0,
            1700454415804.0,
            1700454415824.0,
            1700454416845.0,
            1700454416864.0,
            1700454417885.0,
            1700454417907.0,
            1700454418924.0,
            1700454418944.0]
res = [['Time_Stamp', 'Latitude', 'Longitude', 'Acceleration_X', 'Acceleration_Y', 'Acceleration_Z', 'Gyroscope_X',
        'Gyroscope_Y', 'Gyroscope_Z', 'Index', 'Distance']]
i = 0
for index, row in data.iterrows():
    if 444 < index < 467:
        res.append([new_time[i] * 1000000, row['Latitude'], row['Longitude'], row['Acceleration_X'], row['Acceleration_Y'],
                    row['Acceleration_Z'], row['Gyroscope_X'], row['Gyroscope_Y'], row['Gyroscope_Z'], row['Index'],
                    row['Distance']])
        # print(new_time[i])
        # print(row['Time_Stamp']/1000000)
        i += 1
    else:
        res.append(row)
with open('data/dataset4_200_restore.csv', 'w', newline='') as file:
    writer = csv.writer(file)
    writer.writerows(res)